import matplotlib.pyplot as plt; plt.rcdefaults()
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import style
import pandas as pd
from scipy import stats

# # val = [[5, 0.99], [6, 0.94], [7, 0.94], [8, 0.95], [9, 0.94], [10, 0.96], [11, 0.94], [12, 0.93], [13, 0.92], [14, 0.97], [15, 0.94], [16, 0.97], [17, 0.95], [18, 0.93], [19, 0.98], [20, 0.92], [21, 0.96], [22, 0.93], [23, 0.86], [24, 0.9], [25, 0.92], [26, 0.95], [27, 0.9], [28, 0.94], [29, 0.97], [30, 0.96], [31, 0.95], [32, 0.97], [33, 0.88], [34, 0.94], [35, 0.92], [36, 0.92], [37, 0.95], [38, 0.91], [39, 0.89], [40, 0.87], [41, 0.86], [42, 0.9], [43, 0.94], [44, 0.89], [45, 0.88], [46, 0.9], [47, 0.95], [48, 0.94], [49, 0.92], [50, 0.91], [51, 0.9], [52, 0.91], [53, 0.93], [54, 0.83], [55, 0.93], [56, 0.91], [57, 0.93], [58, 0.89], [59, 0.88], [60, 0.89], [61, 0.87], [62, 0.89], [63, 0.89], [64, 0.84], [65, 0.83], [66, 0.88], [67, 0.86], [68, 0.92], [69, 0.92], [70, 0.85], [71, 0.96], [72, 0.95], [73, 0.88], [74, 0.93], [75, 0.9], [76, 0.87], [77, 0.8], [78, 0.81], [79, 0.91], [80, 0.88], [81, 0.85], [82, 0.88], [83, 0.89], [84, 0.93], [85, 0.91], [86, 0.9], [87, 0.83], [88, 0.82], [89, 0.91], [90, 0.88], [91, 0.88], [92, 0.82], [93, 0.83], [94, 0.83], [95, 0.87], [96, 0.83], [97, 0.84], [98, 0.85], [99, 0.88], [100, 0.82], [101, 0.85], [102, 0.92], [103, 0.78], [104, 0.79], [105, 0.81], [106, 0.88], [107, 0.86], [108, 0.89], [109, 0.83], [110, 0.75], [111, 0.85], [112, 0.82], [113, 0.81], [114, 0.89], [115, 0.83], [116, 0.78], [117, 0.77], [118, 0.87], [119, 0.8], [120, 0.86], [121, 0.78], [122, 0.82], [123, 0.8], [124, 0.81], [125, 0.89], [126, 0.89], [127, 0.87], [128, 0.86], [129, 0.79], [130, 0.84], [131, 0.8], [132, 0.85], [133, 0.84], [134, 0.81], [135, 0.82], [136, 0.86], [137, 0.82], [138, 0.78], [139, 0.77], [140, 0.78], [141, 0.85], [142, 0.87], [143, 0.79], [144, 0.81], [145, 0.79], [146, 0.8], [147, 0.87], [148, 0.81], [149, 0.83], [150, 0.82], [151, 0.82], [152, 0.81], [153, 0.81], [154, 0.77]]

# # val = [[5, 0.93], [25, 0.91], [45, 0.88], [65, 0.86], [85, 0.84], [105, 0.83], [125, 0.82], [145, 0.79], [165, 0.81], [185, 0.78], [205, 0.72], [225, 0.73], [245, 0.71], [265, 0.68], [285, 0.66], [305, 0.63], [325, 0.66], [345, 0.64], [365, 0.64], [385, 0.65]]

# # val = [[4, 0.96], [5, 0.98], [6, 0.98], [7, 0.96], [8, 0.94], [9, 0.94], [10, 0.92], [11, 0.9], [12, 0.94], [13, 0.92], [14, 0.94], [15, 0.98], [16, 0.98], [17, 0.98], [18, 0.94], [19, 0.94], [20, 0.98], [21, 0.84], [22, 0.94], [23, 0.94], [24, 0.94], [25, 0.88], [26, 0.94], [27, 0.88], [28, 0.9], [29, 0.96], [30, 0.94], [31, 0.94], [32, 0.88], [33, 0.88]]

# val = [[5, 0.96], [25, 0.95], [45, 0.89], [65, 0.9], [85, 0.89], [105, 0.87], [125, 0.87], [145, 0.87], [165, 0.86], [185, 0.85], [205, 0.84], [225, 0.83], [245, 0.83], [265, 0.81], [285, 0.8], [305, 0.79], [325, 0.76], [345, 0.78], [365, 0.76], [385, 0.76], [405, 0.75], [425, 0.76], [445, 0.72], [465, 0.76], [485, 0.73], [505, 0.72], [525, 0.73], [545, 0.74], [565, 0.72], [585, 0.73], [605, 0.72], [625, 0.72], [645, 0.72], [665, 0.71], [685, 0.71], [705, 0.74], [725, 0.72], [745, 0.7], [765, 0.71], [785, 0.7], [805, 0.71], [825, 0.71], [845, 0.69], [865, 0.69], [885, 0.66], [905, 0.67], [925, 0.67], [945, 0.67], [965, 0.67], [985, 0.67]]

# k_val = []
# accuracy = []

# for i in range(len(val)):
# 	for j in range(len(val[i])):
# 		if j==0:
# 			k_val.append(val[i][j])
# 		else:
# 			accuracy.append(val[i][j])

# print k_val
# print accuracy


# y_pos = np.arange(len(k_val))
# # plt.bar(y_pos, accuracy, align='center', alpha=0.5)
# # plt.xticks(y_pos, accuracy)
# # plt.ylabel(accuracy)
# # plt.xlabel(k_val)
# # plt.title("K vs Accuracy")

# # plt.show()


# plt.plot(k_val, accuracy)
# # plt.axis(0.0, 1.0,3,32)
# plt.ylim(ymin=0.0)
# # plt.xticks(k_val, accuracy)
# plt.xlabel("k_val")
# plt.ylabel("Accuracy Score")
# plt.title("K vs Accuracy")

# plt.show()

# # plt.scatter(k_val, accuracy)
# # plt.show()

cols1=[3.34,6.98,5.1,5.2,2.9,8.8,3.6,2.8,2,7.8,2.3,8.5,2.8,6.3,2.9,7.5,7.9] #for class 0
cols2=[3.9,6.9,5.1,5.2,4.6,7.7,7.1,5.4,5.6,7.9,5.5,6.7,3.1,7.9,6.6,9.1,7.8] #for class 1

print len(cols1),len(cols2)
# df = pd.read_csv('rand_data.csv')

# df_new = df.drop(['Class'],1)

# lam_val =  np.array(df_new.mean())
# print lam_val


fig = plt.figure()


ax1 = fig.add_subplot(211)
ax1.set_xlabel('lambda values of class 0')
ax1.set_ylabel('Poisson(lambda)')
n = np.arange(0,15)
y = []
for i in cols1:
	y.append(stats.poisson.pmf(n,i))
# print y

for i in y:
	plt.plot(n,i)
	plt.xlim(xmin=-1, xmax=15)


ax2 = fig.add_subplot(212)
ax2.set_xlabel('lambda values of class 1')
ax2.set_ylabel('Poisson(lambda)')
m = np.arange(0,15)
z = []
for i in cols2:
	z.append(stats.poisson.pmf(m,i))
# print y

for i in z:
	plt.plot(m,i)
	plt.xlim(xmin=-1, xmax=15)
	
plt.subplots_adjust(top=1, bottom=0.1)
plt.show()
